var app = angular.module('plunker', ['nvd3']);

app.controller('MainCtrl', function($scope) {
  $scope.tabs = [{
            title: 'Arica',
            url: 'one.tpl.html'
        }, {
            title: 'Coquimbo',
            url: 'two.tpl.html'
        }, {
            title: 'Valparaiso',
            url: 'three.tpl.html'
        }, {
            title: 'RM',
            url: 'four.tpl.html'
        }, {
            title: 'Maule',
            url: 'five.tpl.html'
        }, {
            title: 'Bíobio',
            url: 'six.tpl.html'
        }, {
            title: 'Araucanía',
            url: 'seven.tpl.html'
        }, {
            title: 'Los Lagos',
            url: 'eight.tpl.html'
        }];
    
    $scope.tabs_frutas = [{
            title: 'Plátano',
            url: 'one.tpl.html'
        }, {
            title: 'Naranja',
            url: 'two.tpl.html'
        }, {
            title: 'Manzana',
            url: 'three.tpl.html'
        }, {
            title: 'Limón',
            url: 'four.tpl.html'
        }];

    $scope.currentTab = 'one.tpl.html';

    $scope.onClickTab = function (tab) {
        $scope.currentTab = tab.url;
    }
    
    $scope.isActiveTab = function(tabUrl) {
        return tabUrl == $scope.currentTab;
    }
  $scope.options = {
            chart: {
                type: 'lineWithFocusChart',
                height: 450,
                margin : {
                    top: 20,
                    right: 20,
                    bottom: 60,
                    left: 65
                },
                x: function(d){ return d[0]; },
                y: function(d){ return d[1]; },
                color: d3.scale.category10().range(),
                duration: 300,
                useInteractiveGuideline: true,
                clipVoronoi: false,

                xAxis: {
                    axisLabel: 'X Axis',
                    tickFormat: function(d) {
                        return d3.time.format('%d/%m/%y')(new Date(d))
                    },
                    showMaxMin: false,
                    staggerLabels: true
                },

                yAxis: {
                    axisLabel: 'Y Axis',
                    tickFormat: function(d){
                        return d3.format('$,.0')(d);
                    },
                    axisLabelDistance: 20
                }
            }
        };

        $scope.arica = [
            { 
                key: "Platano",
                values: [[1412910000000 , 800.0] , [1413514800000 , 650.0] , [1414119600000 , 375.0] , [1414724400000 , 700.0] , [1415329200000 , 600.0] , [1415934000000 , 775.0] , [1416538800000 , 550.0] , [1417143600000 , 525.0] , [1417748400000 , 417.0] , [1418353200000 , 500.0] , [1418958000000 , 325.0] , [1419562800000 , 350.0] , [1420772400000 , 375.0] , [1421377200000 , 750.0] , [1421982000000 , 700.0] , [1423191600000 , 500.0] , [1423796400000 , 325.0] , [1424401200000 , 475.0] , [1425006000000 , 500.0] , [1425610800000 , 500.0] , [1426215600000 , 500.0] , [1426820400000 , 600.0] , [1427425200000 , 575.0] , [1428030000000 , 583.0] , [1428634800000 , 500.0] , [1429239600000 , 517.0] , [1429844400000 , 350.0] , [1430449200000 , 325.0] , [1431054000000 , 517.0] , [1431658800000 , 400.0] , [1432263600000 , 563.0] , [1432868400000 , 417.0] , [1433473200000 , 500.0] , [1434078000000 , 425.0] , [1434682800000 , 500.0] , [1435287600000 , 500.0] , [1435892400000 , 700.0] , [1436497200000 , 500.0] , [1437102000000 , 517.0] , [1437706800000 , 500.0] , [1438311600000 , 400.0] , [1438916400000 , 450.0] , [1439521200000 , 463.0] , [1440126000000 , 700.0] , [1440730800000 , 500.0] , [1441335600000 , 630.0] , [1441940400000 , 475.0] , [1442545200000 , 375.0] , [1443150000000 , 420.0] , [1443754800000 , 433.0] , [1444359600000 , 456.0] , [1444964400000 , 600.0] , [1445569200000 , 488.0] , [1446174000000 , 500.0] , [1446778800000 , 392.0] , [1447383600000 , 530.0] , [1447988400000 , 575.0] , [1448593200000 , 660.0] , [1449198000000 , 417.0] , [1450407600000 , 300.0] , [1451617200000 , 438.0] , [1452222000000 , 400.0] , [1452826800000 , 767.0] , [1453431600000 , 760.0] , [1454036400000 , 700.0] , [1454641200000 , 600.0] , [1455246000000 , 600.0] , [1455850800000 , 650.0] , [1456455600000 , 667.0] , [1457060400000 , 488.0] , [1457665200000 , 510.0] , [1458270000000 , 650.0] , [1458874800000 , 600.0] , [1459479600000 , 650.0] , [1460084400000 , 950.0] , [1460689200000 , 450.0] , [1461294000000 , 463.0] , [1461898800000 , 700.0] , [1462503600000 , 650.0] , [1463108400000 , 600.0] , [1463713200000 , 425.0] , [1464318000000 , 538.0] , [1464922800000 , 600.0] , [1465527600000 , 500.0] , [1466132400000 , 640.0] , [1466737200000 , 700.0] , [1467342000000 , 725.0] , [1467946800000 , 560.0] , [1468551600000 , 600.0] , [1469156400000 , 700.0] , [1469761200000 , 900.0] , [1470366000000 , 525.0] , [1470970800000 , 560.0] , [1471575600000 , 560.0] , [1472180400000 , 640.0] , [1472785200000 , 670.0] , [1473390000000 , 770.0] , [1473994800000 , 750.0] , [1474599600000 , 620.0] , [1475204400000 , 608.0] , [1475809200000 , 763.0] , [1476414000000 , 738.0] , [1477018800000 , 550.0] , [1477623600000 , 613.0] , [1478833200000 , 788.0] , [1479438000000 , 575.0] , [1480042800000 , 550.0] , [1480647600000 , 600.0]]
            },
            { 
                key: "Naranja",
                values: [[1421377200000 , 850.0] , [1421982000000 , 1000.0] , [1422586800000 , 850.0] , [1424401200000 , 800.0] , [1426215600000 , 850.0] , [1427425200000 , 1425.0] , [1428030000000 , 1333.0] , [1428634800000 , 1733.0] , [1429239600000 , 1200.0] , [1429844400000 , 1100.0] , [1430449200000 , 1067.0] , [1431054000000 , 850.0] , [1431658800000 , 1075.0] , [1432263600000 , 867.0] , [1432868400000 , 1067.0] , [1452826800000 , 1000.0] , [1453431600000 , 1133.0] , [1454036400000 , 950.0] , [1454641200000 , 1200.0] , [1455246000000 , 1000.0] , [1455850800000 , 1000.0] , [1456455600000 , 967.0] , [1457060400000 , 1033.0] , [1457665200000 , 1050.0] , [1458270000000 , 950.0] , [1458874800000 , 1300.0] , [1459479600000 , 1300.0] , [1460084400000 , 1050.0] , [1460689200000 , 925.0] , [1461294000000 , 950.0] , [1461898800000 , 1000.0] , [1462503600000 , 1120.0] , [1463108400000 , 1067.0] , [1463713200000 , 950.0] , [1464318000000 , 1000.0] , [1464922800000 , 900.0]]
            },
            { 
                key: "Manzana",
                values: [[1462503600000 , 660.0] , [1463108400000 , 733.0] , [1463713200000 , 667.0] , [1464318000000 , 800.0] , [1464922800000 , 667.0] , [1465527600000 , 800.0] , [1466132400000 , 750.0] , [1466737200000 , 567.0] , [1467342000000 , 725.0] , [1467946800000 , 620.0] , [1468551600000 , 567.0] , [1469156400000 , 700.0] , [1469761200000 , 600.0] , [1470366000000 , 750.0] , [1470970800000 , 750.0]]
            },
            { 
        	key: "Limon",
                values: [[1414119600000 , 700.0] , [1414724400000 , 800.0] , [1415329200000 , 800.0] , [1415934000000 , 800.0] , [1416538800000 , 1100.0] , [1417143600000 , 1100.0] , [1417748400000 , 1250.0] , [1418353200000 , 1300.0] , [1418958000000 , 1300.0] , [1419562800000 , 1250.0] , [1420772400000 , 1500.0] , [1421377200000 , 1450.0] , [1421982000000 , 1300.0] , [1422586800000 , 1400.0] , [1423796400000 , 1300.0] , [1425006000000 , 1500.0] , [1426215600000 , 1300.0] , [1427425200000 , 1400.0] , [1428634800000 , 1200.0] , [1429239600000 , 1400.0] , [1429844400000 , 1300.0] , [1430449200000 , 1150.0] , [1431658800000 , 1000.0] , [1432263600000 , 1000.0] , [1432868400000 , 988.0] , [1433473200000 , 933.0] , [1434682800000 , 800.0] , [1437102000000 , 600.0] , [1452222000000 , 967.0] , [1452826800000 , 1050.0] , [1453431600000 , 1100.0] , [1454036400000 , 1100.0] , [1454641200000 , 1100.0] , [1455246000000 , 1000.0] , [1455850800000 , 1050.0] , [1456455600000 , 1120.0] , [1457060400000 , 1200.0] , [1457665200000 , 1225.0] , [1458270000000 , 1500.0] , [1458874800000 , 1333.0] , [1459479600000 , 1200.0] , [1460084400000 , 1200.0] , [1460689200000 , 1100.0] , [1461898800000 , 1113.0] , [1462503600000 , 1050.0] , [1463108400000 , 1250.0] , [1463713200000 , 1000.0] , [1464318000000 , 1067.0] , [1464922800000 , 1000.0] , [1465527600000 , 833.0] , [1466132400000 , 750.0] , [1466737200000 , 767.0] , [1467342000000 , 833.0] , [1467946800000 , 750.0] , [1468551600000 , 683.0] , [1469156400000 , 700.0] , [1469761200000 , 625.0] , [1470366000000 , 625.0] , [1470970800000 , 650.0] , [1471575600000 , 575.0] , [1472180400000 , 575.0] , [1472785200000 , 560.0] , [1473390000000 , 550.0] , [1473994800000 , 525.0] , [1474599600000 , 583.0] , [1475204400000 , 640.0] , [1475809200000 , 725.0] , [1477018800000 , 625.0] , [1477623600000 , 725.0] , [1478228400000 , 750.0] , [1478833200000 , 950.0]]
            }
        ];
        
        $scope.coquimbo = [
            { 
                key: "Platano",
                values: [[1402027200000 , 483.0] , [1402632000000 , 519.0] , [1403236800000 , 480.0] , [1403841600000 , 511.0] , [1404446400000 , 531.0] , [1405051200000 , 513.0] , [1405656000000 , 592.0] , [1406260800000 , 531.0] , [1406865600000 , 525.0] , [1407470400000 , 511.0] , [1408075200000 , 503.0] , [1408680000000 , 508.0] , [1409284800000 , 564.0] , [1409889600000 , 631.0] , [1410490800000 , 583.0] , [1411095600000 , 646.0] , [1411700400000 , 612.0] , [1412305200000 , 594.0] , [1412910000000 , 596.0] , [1413514800000 , 684.0] , [1414119600000 , 756.0] , [1414724400000 , 778.0] , [1415329200000 , 763.0] , [1415934000000 , 727.0] , [1416538800000 , 686.0] , [1417143600000 , 675.0] , [1417748400000 , 629.0] , [1418353200000 , 581.0] , [1418958000000 , 583.0] , [1419562800000 , 575.0] , [1420772400000 , 631.0] , [1421377200000 , 668.0] , [1421982000000 , 610.0] , [1422586800000 , 602.0] , [1423191600000 , 611.0] , [1423796400000 , 613.0] , [1424401200000 , 575.0] , [1425006000000 , 655.0] , [1425610800000 , 781.0] , [1426215600000 , 715.0] , [1426820400000 , 646.0] , [1427425200000 , 637.0] , [1428030000000 , 585.0] , [1428634800000 , 576.0] , [1429239600000 , 581.0] , [1429844400000 , 610.0] , [1430449200000 , 684.0] , [1431054000000 , 602.0] , [1431658800000 , 576.0] , [1432263600000 , 565.0] , [1432868400000 , 525.0] , [1433473200000 , 544.0] , [1434078000000 , 482.0] , [1434682800000 , 508.0] , [1435287600000 , 506.0] , [1435892400000 , 533.0] , [1436497200000 , 560.0] , [1437102000000 , 552.0] , [1437706800000 , 558.0] , [1438311600000 , 524.0] , [1438916400000 , 510.0] , [1439521200000 , 510.0] , [1440126000000 , 804.0] , [1440730800000 , 768.0] , [1441335600000 , 652.0] , [1441940400000 , 574.0] , [1442545200000 , 600.0] , [1443150000000 , 568.0] , [1443754800000 , 555.0] , [1444359600000 , 575.0] , [1444964400000 , 650.0] , [1445569200000 , 728.0] , [1446174000000 , 692.0] , [1446778800000 , 756.0] , [1447383600000 , 737.0] , [1447988400000 , 644.0] , [1448593200000 , 615.0] , [1449198000000 , 600.0] , [1449802800000 , 583.0] , [1450407600000 , 568.0] , [1451012400000 , 590.0] , [1451617200000 , 656.0] , [1452222000000 , 623.0] , [1452826800000 , 598.0] , [1453431600000 , 636.0] , [1454036400000 , 617.0] , [1454641200000 , 629.0] , [1455246000000 , 644.0] , [1455850800000 , 604.0] , [1456455600000 , 644.0] , [1457060400000 , 639.0] , [1457665200000 , 656.0] , [1458270000000 , 626.0] , [1458874800000 , 647.0] , [1459479600000 , 642.0] , [1460084400000 , 700.0] , [1460689200000 , 725.0] , [1461294000000 , 629.0] , [1461898800000 , 606.0] , [1462503600000 , 602.0] , [1463108400000 , 575.0] , [1463713200000 , 556.0] , [1464318000000 , 606.0] , [1464922800000 , 619.0] , [1465527600000 , 665.0] , [1466132400000 , 669.0] , [1466737200000 , 671.0] , [1467342000000 , 650.0] , [1467946800000 , 569.0] , [1468551600000 , 549.0] , [1469156400000 , 680.0] , [1469761200000 , 637.0] , [1470366000000 , 654.0] , [1470970800000 , 619.0] , [1471575600000 , 625.0] , [1472180400000 , 623.0] , [1472785200000 , 628.0] , [1473390000000 , 792.0] , [1473994800000 , 705.0] , [1474599600000 , 692.0] , [1475204400000 , 836.0] , [1475809200000 , 753.0] , [1476414000000 , 725.0] , [1477018800000 , 672.0] , [1477623600000 , 656.0] , [1478228400000 , 617.0] , [1478833200000 , 679.0] , [1479438000000 , 667.0] , [1480042800000 , 651.0] , [1480647600000 , 652.0]]
            },
            { 
                key: "Naranja",
                values: [[1420772400000 , 797.0] , [1421377200000 , 775.0] , [1421982000000 , 731.0] , [1422586800000 , 738.0] , [1423191600000 , 740.0] , [1423796400000 , 719.0] , [1424401200000 , 719.0] , [1425006000000 , 726.0] , [1425610800000 , 736.0] , [1426215600000 , 781.0] , [1426820400000 , 745.0] , [1427425200000 , 688.0] , [1428030000000 , 718.0] , [1428634800000 , 708.0] , [1429239600000 , 736.0] , [1429844400000 , 724.0] , [1430449200000 , 744.0] , [1431054000000 , 744.0] , [1431658800000 , 731.0] , [1432263600000 , 629.0] , [1432868400000 , 686.0] , [1452826800000 , 849.0] , [1453431600000 , 837.0] , [1454036400000 , 867.0] , [1454641200000 , 879.0] , [1455246000000 , 903.0] , [1455850800000 , 907.0] , [1456455600000 , 860.0] , [1457060400000 , 885.0] , [1457665200000 , 888.0] , [1458270000000 , 872.0] , [1458874800000 , 888.0] , [1459479600000 , 913.0] , [1460084400000 , 1001.0] , [1460689200000 , 1015.0] , [1461294000000 , 1000.0] , [1461898800000 , 1133.0] , [1462503600000 , 988.0] , [1463108400000 , 829.0] , [1463713200000 , 825.0] , [1464318000000 , 731.0]]
            },
            { 
                key: "Manzana",
                values: [[1462503600000 , 713.0] , [1463108400000 , 675.0] , [1463713200000 , 611.0] , [1464318000000 , 637.0] , [1464922800000 , 623.0] , [1465527600000 , 657.0] , [1466132400000 , 685.0] , [1466737200000 , 667.0] , [1467342000000 , 667.0] , [1467946800000 , 688.0] , [1468551600000 , 667.0] , [1469156400000 , 708.0] , [1469761200000 , 667.0] , [1470366000000 , 706.0] , [1470970800000 , 719.0]]
            },
            { 
                key: "Limon",
                values: [[1402027200000 , 667.0] , [1403236800000 , 700.0] , [1403841600000 , 575.0] , [1404446400000 , 590.0] , [1405656000000 , 504.0] , [1406260800000 , 511.0] , [1406865600000 , 557.0] , [1407470400000 , 610.0] , [1408075200000 , 550.0] , [1408680000000 , 536.0] , [1409284800000 , 513.0] , [1409889600000 , 518.0] , [1410490800000 , 610.0] , [1411095600000 , 655.0] , [1411700400000 , 591.0] , [1412305200000 , 590.0] , [1412910000000 , 621.0] , [1413514800000 , 614.0] , [1414119600000 , 587.0] , [1414724400000 , 606.0] , [1415329200000 , 734.0] , [1415934000000 , 924.0] , [1416538800000 , 896.0] , [1417143600000 , 958.0] , [1417748400000 , 967.0] , [1418353200000 , 1033.0] , [1418958000000 , 969.0] , [1419562800000 , 1125.0] , [1420772400000 , 1285.0] , [1421377200000 , 1297.0] , [1421982000000 , 1161.0] , [1422586800000 , 1117.0] , [1423191600000 , 1022.0] , [1423796400000 , 1053.0] , [1424401200000 , 1242.0] , [1425006000000 , 1250.0] , [1425610800000 , 1417.0] , [1426215600000 , 1446.0] , [1426820400000 , 1523.0] , [1427425200000 , 1431.0] , [1428030000000 , 1353.0] , [1428634800000 , 1358.0] , [1429239600000 , 1244.0] , [1429844400000 , 1067.0] , [1430449200000 , 829.0] , [1431054000000 , 818.0] , [1431658800000 , 854.0] , [1432263600000 , 755.0] , [1432868400000 , 744.0] , [1433473200000 , 667.0] , [1434078000000 , 534.0] , [1434682800000 , 502.0] , [1435287600000 , 473.0] , [1435892400000 , 419.0] , [1436497200000 , 442.0] , [1437102000000 , 416.0] , [1437706800000 , 397.0] , [1438311600000 , 391.0] , [1438916400000 , 363.0] , [1439521200000 , 343.0] , [1440126000000 , 361.0] , [1440730800000 , 547.0] , [1441335600000 , 339.0] , [1441940400000 , 335.0] , [1442545200000 , 318.0] , [1443150000000 , 324.0] , [1443754800000 , 363.0] , [1444359600000 , 375.0] , [1444964400000 , 400.0] , [1445569200000 , 380.0] , [1446174000000 , 375.0] , [1446778800000 , 392.0] , [1447383600000 , 397.0] , [1447988400000 , 356.0] , [1448593200000 , 378.0] , [1449198000000 , 374.0] , [1449802800000 , 392.0] , [1450407600000 , 392.0] , [1451012400000 , 501.0] , [1451617200000 , 539.0] , [1452222000000 , 704.0] , [1452826800000 , 709.0] , [1453431600000 , 717.0] , [1454036400000 , 663.0] , [1454641200000 , 653.0] , [1455246000000 , 673.0] , [1455850800000 , 676.0] , [1456455600000 , 704.0] , [1457060400000 , 837.0] , [1457665200000 , 1057.0] , [1458270000000 , 1046.0] , [1458874800000 , 926.0] , [1459479600000 , 867.0] , [1460084400000 , 746.0] , [1460689200000 , 783.0] , [1461294000000 , 788.0] , [1461898800000 , 824.0] , [1462503600000 , 896.0] , [1463108400000 , 942.0] , [1463713200000 , 933.0] , [1464318000000 , 683.0] , [1464922800000 , 577.0] , [1465527600000 , 606.0] , [1466132400000 , 504.0] , [1466737200000 , 481.0] , [1467342000000 , 439.0] , [1467946800000 , 408.0] , [1468551600000 , 393.0] , [1469156400000 , 369.0] , [1469761200000 , 342.0] , [1470366000000 , 344.0] , [1470970800000 , 321.0] , [1471575600000 , 364.0] , [1472180400000 , 354.0] , [1472785200000 , 398.0] , [1473390000000 , 386.0] , [1473994800000 , 392.0] , [1474599600000 , 433.0] , [1475204400000 , 452.0] , [1475809200000 , 408.0] , [1476414000000 , 475.0] , [1477018800000 , 540.0] , [1477623600000 , 557.0] , [1478228400000 , 544.0] , [1478833200000 , 981.0] , [1479438000000 , 975.0] , [1480042800000 , 988.0] , [1480647600000 , 986.0]]
            }
        ];
        $scope.valparaiso = [
            { 
                key: "Platano",
                values: [[1405051200000 , 464.0] , [1405656000000 , 475.0] , [1406260800000 , 450.0] , [1406865600000 , 438.0] , [1407470400000 , 450.0] , [1408075200000 , 450.0] , [1408680000000 , 458.0] , [1409284800000 , 528.0] , [1409889600000 , 508.0] , [1410490800000 , 533.0] , [1411700400000 , 504.0] , [1412305200000 , 533.0] , [1413514800000 , 621.0] , [1414119600000 , 742.0] , [1414724400000 , 750.0] , [1415329200000 , 708.0] , [1415934000000 , 700.0] , [1416538800000 , 592.0] , [1417143600000 , 578.0] , [1417748400000 , 525.0] , [1418353200000 , 475.0] , [1418958000000 , 508.0] , [1419562800000 , 550.0] , [1420772400000 , 500.0] , [1421377200000 , 503.0] , [1421982000000 , 492.0] , [1422586800000 , 513.0] , [1423191600000 , 500.0] , [1423796400000 , 488.0] , [1424401200000 , 496.0] , [1425006000000 , 550.0] , [1425610800000 , 629.0] , [1426215600000 , 633.0] , [1426820400000 , 596.0] , [1427425200000 , 592.0] , [1428030000000 , 608.0] , [1428634800000 , 588.0] , [1429239600000 , 554.0] , [1429844400000 , 567.0] , [1430449200000 , 575.0] , [1431054000000 , 600.0] , [1431658800000 , 646.0] , [1432263600000 , 511.0] , [1432868400000 , 500.0] , [1433473200000 , 508.0] , [1434078000000 , 483.0] , [1434682800000 , 488.0] , [1435287600000 , 500.0] , [1435892400000 , 483.0] , [1436497200000 , 500.0] , [1437102000000 , 488.0] , [1437706800000 , 483.0] , [1438311600000 , 542.0] , [1438916400000 , 556.0] , [1439521200000 , 550.0] , [1440126000000 , 925.0] , [1440730800000 , 684.0] , [1441335600000 , 625.0] , [1441940400000 , 550.0] , [1442545200000 , 492.0] , [1443150000000 , 496.0] , [1443754800000 , 484.0] , [1444359600000 , 496.0] , [1444964400000 , 542.0] , [1445569200000 , 613.0] , [1446174000000 , 663.0] , [1446778800000 , 688.0] , [1447383600000 , 713.0] , [1447988400000 , 656.0] , [1448593200000 , 563.0] , [1449198000000 , 551.0] , [1449802800000 , 531.0] , [1450407600000 , 569.0] , [1451012400000 , 542.0] , [1451617200000 , 558.0] , [1452222000000 , 581.0] , [1452826800000 , 547.0] , [1453431600000 , 613.0] , [1454036400000 , 569.0] , [1454641200000 , 600.0] , [1455246000000 , 563.0] , [1455850800000 , 588.0] , [1456455600000 , 581.0] , [1457060400000 , 567.0] , [1457665200000 , 588.0] , [1458270000000 , 581.0] , [1458874800000 , 597.0] , [1459479600000 , 606.0] , [1460084400000 , 619.0] , [1460689200000 , 622.0] , [1461294000000 , 581.0] , [1461898800000 , 591.0] , [1462503600000 , 563.0] , [1463108400000 , 563.0] , [1463713200000 , 519.0] , [1464318000000 , 550.0] , [1464922800000 , 569.0] , [1465527600000 , 706.0] , [1466132400000 , 713.0] , [1466737200000 , 616.0] , [1467342000000 , 575.0] , [1467946800000 , 559.0] , [1468551600000 , 475.0] , [1469156400000 , 567.0] , [1469761200000 , 547.0] , [1470366000000 , 575.0] , [1470970800000 , 563.0] , [1471575600000 , 575.0] , [1472180400000 , 559.0] , [1472785200000 , 663.0] , [1473390000000 , 781.0] , [1473994800000 , 613.0] , [1474599600000 , 650.0] , [1475204400000 , 638.0] , [1475809200000 , 650.0] , [1476414000000 , 619.0] , [1477018800000 , 644.0] , [1477623600000 , 650.0] , [1478228400000 , 594.0] , [1478833200000 , 663.0] , [1479438000000 , 656.0] , [1480042800000 , 631.0] , [1480647600000 , 606.0]]
            },
            { 
                key: "Naranja",
                values: [[1420772400000 , 583.0] , [1421377200000 , 586.0] , [1421982000000 , 604.0] , [1422586800000 , 631.0] , [1423191600000 , 622.0] , [1423796400000 , 658.0] , [1424401200000 , 583.0] , [1425006000000 , 650.0] , [1425610800000 , 671.0] , [1426215600000 , 650.0] , [1426820400000 , 683.0] , [1427425200000 , 675.0] , [1428030000000 , 633.0] , [1428634800000 , 654.0] , [1429239600000 , 638.0] , [1429844400000 , 569.0] , [1430449200000 , 600.0] , [1431054000000 , 617.0] , [1431658800000 , 556.0] , [1432263600000 , 556.0] , [1432868400000 , 550.0] , [1452826800000 , 631.0] , [1453431600000 , 775.0] , [1454036400000 , 700.0] , [1454641200000 , 692.0] , [1455246000000 , 550.0] , [1455850800000 , 783.0] , [1456455600000 , 750.0] , [1457060400000 , 754.0] , [1457665200000 , 750.0] , [1458270000000 , 775.0] , [1458874800000 , 800.0] , [1459479600000 , 788.0] , [1460084400000 , 700.0] , [1460689200000 , 747.0] , [1461294000000 , 788.0] , [1461898800000 , 806.0] , [1462503600000 , 838.0] , [1463108400000 , 763.0] , [1463713200000 , 756.0] , [1464318000000 , 694.0]]
            },
            { 
                key: "Manzana",
                values: [[1462503600000 , 544.0] , [1463108400000 , 550.0] , [1463713200000 , 550.0] , [1464318000000 , 563.0] , [1464922800000 , 628.0] , [1465527600000 , 600.0] , [1466132400000 , 650.0] , [1466737200000 , 619.0] , [1467342000000 , 600.0] , [1467946800000 , 600.0] , [1468551600000 , 488.0] , [1469156400000 , 550.0] , [1469761200000 , 581.0] , [1470366000000 , 650.0] , [1470970800000 , 625.0]]
            },
            { 
                key: "Limon",
                values: [[1405051200000 , 492.0] , [1405656000000 , 550.0] , [1406260800000 , 479.0] , [1406865600000 , 442.0] , [1407470400000 , 550.0] , [1408075200000 , 446.0] , [1408680000000 , 446.0] , [1409284800000 , 519.0] , [1409889600000 , 533.0] , [1410490800000 , 488.0] , [1411700400000 , 592.0] , [1412305200000 , 561.0] , [1413514800000 , 463.0] , [1414119600000 , 621.0] , [1414724400000 , 608.0] , [1415329200000 , 708.0] , [1415934000000 , 863.0] , [1416538800000 , 904.0] , [1417143600000 , 842.0] , [1417748400000 , 933.0] , [1418353200000 , 900.0] , [1418958000000 , 913.0] , [1419562800000 , 800.0] , [1420772400000 , 1317.0] , [1421377200000 , 1194.0] , [1421982000000 , 1075.0] , [1422586800000 , 1133.0] , [1423191600000 , 1117.0] , [1423796400000 , 1100.0] , [1424401200000 , 1144.0] , [1425006000000 , 1267.0] , [1425610800000 , 1317.0] , [1426215600000 , 1250.0] , [1426820400000 , 1300.0] , [1427425200000 , 1333.0] , [1428030000000 , 1267.0] , [1428634800000 , 1150.0] , [1429239600000 , 1183.0] , [1429844400000 , 1067.0] , [1430449200000 , 967.0] , [1431054000000 , 883.0] , [1431658800000 , 844.0] , [1432263600000 , 806.0] , [1432868400000 , 808.0] , [1433473200000 , 669.0] , [1434078000000 , 529.0] , [1434682800000 , 567.0] , [1435287600000 , 492.0] , [1435892400000 , 492.0] , [1436497200000 , 433.0] , [1437102000000 , 425.0] , [1437706800000 , 350.0] , [1438311600000 , 400.0] , [1438916400000 , 325.0] , [1439521200000 , 344.0] , [1440126000000 , 356.0] , [1440730800000 , 306.0] , [1441335600000 , 338.0] , [1441940400000 , 331.0] , [1442545200000 , 325.0] , [1443150000000 , 350.0] , [1443754800000 , 331.0] , [1444359600000 , 338.0] , [1444964400000 , 308.0] , [1445569200000 , 422.0] , [1446174000000 , 308.0] , [1446778800000 , 356.0] , [1447383600000 , 338.0] , [1447988400000 , 363.0] , [1448593200000 , 338.0] , [1449198000000 , 363.0] , [1449802800000 , 350.0] , [1450407600000 , 338.0] , [1451012400000 , 292.0] , [1451617200000 , 683.0] , [1452222000000 , 700.0] , [1452826800000 , 600.0] , [1453431600000 , 606.0] , [1454036400000 , 563.0] , [1454641200000 , 550.0] , [1455246000000 , 613.0] , [1455850800000 , 567.0] , [1456455600000 , 831.0] , [1457060400000 , 750.0] , [1457665200000 , 1000.0] , [1458270000000 , 908.0] , [1458874800000 , 825.0] , [1459479600000 , 846.0] , [1460084400000 , 889.0] , [1460689200000 , 850.0] , [1461294000000 , 896.0] , [1461898800000 , 869.0] , [1462503600000 , 975.0] , [1463108400000 , 1075.0] , [1463713200000 , 858.0] , [1464318000000 , 571.0] , [1464922800000 , 594.0] , [1465527600000 , 517.0] , [1466132400000 , 600.0] , [1466737200000 , 541.0] , [1467342000000 , 472.0] , [1467946800000 , 400.0] , [1468551600000 , 406.0] , [1469156400000 , 400.0] , [1469761200000 , 369.0] , [1470366000000 , 325.0] , [1470970800000 , 358.0] , [1471575600000 , 381.0] , [1472180400000 , 388.0] , [1472785200000 , 375.0] , [1473390000000 , 388.0] , [1473994800000 , 350.0] , [1474599600000 , 450.0] , [1475204400000 , 400.0] , [1475809200000 , 463.0] , [1476414000000 , 459.0] , [1477018800000 , 542.0] , [1477623600000 , 581.0] , [1478228400000 , 775.0] , [1478833200000 , 931.0] , [1479438000000 , 850.0] , [1480042800000 , 869.0] , [1480647600000 , 813.0]]
            }
        ];
        $scope.options2 = {
            chart: {
                type: 'discreteBarChart',
                height: 450,
                margin : {
                    top: 20,
                    right: 20,
                    bottom: 50,
                    left: 55
                },
                x: function(d){return d.label;},
                y: function(d){return d.value + (1e-10);},
                showValues: true,
                valueFormat: function(d){
                    return d3.format(',.4f')(d);
                },
                duration: 500,
                xAxis: {
                    axisLabel: 'X Axis'
                },
                yAxis: {
                    axisLabel: 'Y Axis',
                    axisLabelDistance: -10
                }
            }
        };

        $scope.data2 = [
            {
                key: "Cumulative Return",
                values: [
                    {
                        "label" : "A" ,
                        "value" : -29.765957771107
                    } ,
                    {
                        "label" : "B" ,
                        "value" : 0
                    } ,
                    {
                        "label" : "C" ,
                        "value" : 32.807804682612
                    } ,
                    {
                        "label" : "D" ,
                        "value" : 196.45946739256
                    } ,
                    {
                        "label" : "E" ,
                        "value" : 0.19434030906893
                    } ,
                    {
                        "label" : "F" ,
                        "value" : -98.079782601442
                    } ,
                    {
                        "label" : "G" ,
                        "value" : -13.925743130903
                    } ,
                    {
                        "label" : "H" ,
                        "value" : -5.1387322875705
                    }
                ]
            }
        ]
        
        
        
        function dashboard(id, fData){
        var barColor = 'steelblue';
        function segColor(c){ return {Limon:"#f2f08c", Naranja:"#e08214",Manzana:"#e52424", Platano:"#41ab5d"}[c]; }
        
        // compute total for each state.
        fData.forEach(function(d){d.total=d.freq.Limon+d.freq.Naranja+d.freq.Manzana+d.freq.Platano;});
        
        // function to handle histogram.
        function histoGram(fD){
            var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};
            hGDim.w = 500 - hGDim.l - hGDim.r, 
            hGDim.h = 300 - hGDim.t - hGDim.b;
                
            //create svg for histogram.
            var hGsvg = d3.select(id).append("svg")
                .attr("width", hGDim.w + hGDim.l + hGDim.r)
                .attr("height", hGDim.h + hGDim.t + hGDim.b).append("g")
                .attr("transform", "translate(" + hGDim.l + "," + hGDim.t + ")");

            // create function for x-axis mapping.
            var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)
                    .domain(fD.map(function(d) { return d[0]; }));

            // Add x-axis to the histogram svg.
            hGsvg.append("g").attr("class", "x axis")
                .attr("transform", "translate(0," + hGDim.h + ")")
                .call(d3.svg.axis().scale(x).orient("bottom"));

            // Create function for y-axis map.
            var y = d3.scale.linear().range([hGDim.h, 0])
                    .domain([0, d3.max(fD, function(d) { return d[1]; })]);

            // Create bars for histogram to contain rectangles and freq labels.
            var bars = hGsvg.selectAll(".bar").data(fD).enter()
                    .append("g").attr("class", "bar");
            
            //create the rectangles.
            bars.append("rect")
                .attr("x", function(d) { return x(d[0]); })
                .attr("y", function(d) { return y(d[1]); })
                .attr("width", x.rangeBand())
                .attr("height", function(d) { return hGDim.h - y(d[1]); })
                .attr('fill',barColor)
                .on("mouseover",mouseover)// mouseover is defined below.
                .on("mouseout",mouseout);// mouseout is defined below.
                
            //Create the frequency labels above the rectangles.
            bars.append("text").text(function(d){ return d3.format(",")(d[1])})
                .attr("x", function(d) { return x(d[0])+x.rangeBand()/2; })
                .attr("y", function(d) { return y(d[1])-5; })
                .attr("text-anchor", "middle");
            
            function mouseover(d){  // utility function to be called on mouseover.
                // filter for selected state.
                var st = fData.filter(function(s){ return s.State == d[0];})[0],
                    nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});
                   
                // call update functions of pie-chart and legend.    
                pC.update(nD);
                leg.update(nD);
            }
            
            function mouseout(d){    // utility function to be called on mouseout.
                // reset the pie-chart and legend.    
                pC.update(tF);
                leg.update(tF);
            }
            
            // create function to update the bars. This will be used by pie-chart.
            hG.update = function(nD, color){
                // update the domain of the y-axis map to reflect change in frequencies.
                y.domain([0, d3.max(nD, function(d) { return d[1]; })]);
                
                // Attach the new data to the bars.
                var bars = hGsvg.selectAll(".bar").data(nD);
                
                // transition the height and color of rectangles.
                bars.select("rect").transition().duration(500)
                    .attr("y", function(d) {return y(d[1]); })
                    .attr("height", function(d) { return hGDim.h - y(d[1]); })
                    .attr("fill", color);

                // transition the frequency labels location and change value.
                bars.select("text").transition().duration(500)
                    .text(function(d){ return d3.format(",")(d[1])})
                    .attr("y", function(d) {return y(d[1])-5; });            
            }        
            return hG;
        }
        
        // function to handle pieChart.
        function pieChart(pD){
            var pC ={},    pieDim ={w:250, h: 250};
            pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;
                    
            // create svg for pie chart.
            var piesvg = d3.select(id).append("svg")
                .attr("width", pieDim.w).attr("height", pieDim.h).append("g")
                .attr("transform", "translate("+pieDim.w/2+","+pieDim.h/2+")");
            
            // create function to draw the arcs of the pie slices.
            var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);

            // create a function to compute the pie slice angles.
            var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });

            // Draw the pie slices.
            piesvg.selectAll("path").data(pie(pD)).enter().append("path").attr("d", arc)
                .each(function(d) { this._current = d; })
                .style("fill", function(d) { return segColor(d.data.type); })
                .on("mouseover",mouseover).on("mouseout",mouseout);

            // create function to update pie-chart. This will be used by histogram.
            pC.update = function(nD){
                piesvg.selectAll("path").data(pie(nD)).transition().duration(500)
                    .attrTween("d", arcTween);
            }        
            // Utility function to be called on mouseover a pie slice.
            function mouseover(d){
                // call the update function of histogram with new data.
                hG.update(fData.map(function(v){ 
                    return [v.State,v.freq[d.data.type]];}),segColor(d.data.type));
            }
            //Utility function to be called on mouseout a pie slice.
            function mouseout(d){
                // call the update function of histogram with all data.
                hG.update(fData.map(function(v){
                    return [v.State,v.total];}), barColor);
            }
            // Animating the pie-slice requiring a custom function which specifies
            // how the intermediate paths should be drawn.
            function arcTween(a) {
                var i = d3.interpolate(this._current, a);
                this._current = i(0);
                return function(t) { return arc(i(t));    };
            }    
            return pC;
        }
        
        // function to handle legend.
        function legend(lD){
            var leg = {};
                
            // create table for legend.
            var legend = d3.select(id).append("table").attr('class','legend');
            
            // create one row per segment.
            var tr = legend.append("tbody").selectAll("tr").data(lD).enter().append("tr");
                
            // create the first column for each segment.
            tr.append("td").append("svg").attr("width", '16').attr("height", '16').append("rect")
                .attr("width", '16').attr("height", '16')
    			.attr("fill",function(d){ return segColor(d.type); });
                
            // create the second column for each segment.
            tr.append("td").text(function(d){ return d.type;});

            // create the third column for each segment.
            tr.append("td").attr("class",'legendFreq')
                .text(function(d){ return d3.format(",")(d.freq);});

            // create the fourth column for each segment.
            tr.append("td").attr("class",'legendPerc')
                .text(function(d){ return getLegend(d,lD);});

            // Utility function to be used to update the legend.
            leg.update = function(nD){
                // update the data attached to the row elements.
                var l = legend.select("tbody").selectAll("tr").data(nD);

                // update the frequencies.
                l.select(".legendFreq").text(function(d){ return d3.format(",")(d.freq);});

                // update the percentage column.
                l.select(".legendPerc").text(function(d){ return getLegend(d,nD);});        
            }
            
            function getLegend(d,aD){ // Utility function to compute percentage.
                return d3.format("%")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));
            }

            return leg;
        }
        
        // calculate total frequency by segment for all state.
        var tF = ['Limon','Naranja','Manzana', 'Platano'].map(function(d){ 
            return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; 
        });    
        
        // calculate total frequency by state for all segment.
        var sF = fData.map(function(d){return [d.State,d.total];});

        var hG = histoGram(sF), // create the histogram.
            pC = pieChart(tF), // create the pie-chart.
            leg= legend(tF);  // create the legend.
    }
    
    var freqData=[
    {State:'Arica y Parinacota',freq:{Limon:908, Naranja:1040, Manzana:698, Platano:628}}
    ,{State:'Coquimbo',freq:{Limon:649, Naranja:892, Manzana:675, Platano:649}}
    ,{State:'Valparaiso',freq:{Limon:642, Naranja:746, Manzana:590, Platano:599}}
    ,{State:'Metropolitana',freq:{Limon:720, Naranja:873, Manzana:583, Platano:598}}
    ,{State:'Maule',freq:{Limon:735, Naranja:884, Manzana:534, Platano:595}}
    ,{State:'Bíobio',freq:{Limon:767, Naranja:739, Manzana:440, Platano:672}}
    ,{State:'La Araucanía',freq:{Limon:878, Naranja:977, Manzana:558, Platano:630}}
    ,{State:'Los Lagos',freq:{Limon:1045, Naranja:1153, Manzana:899, Platano:867}}
    ];

    dashboard('#dashboard',freqData);  

    
});
